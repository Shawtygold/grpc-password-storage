<Window x:Class="PasswordsBunker.MVVM.View.Forms.PasswordDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
        xmlns:bi="https://github.com/helluvamatt/BootstrapIcons.Wpf/"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PasswordsBunker.MVVM.View.Forms"
        mc:Ignorable="d"
        Title="PasswordDialog"
        Height="245"
        Width="300"
        RenderOptions.BitmapScalingMode="HighQuality"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        Name="Dialog">

    <Window.Resources>

        <!--Background Color-->
        <SolidColorBrush Color="#2B2B2B" x:Key="BackgroundColor"/>
        
        <!--Text Color-->
        <SolidColorBrush Color="#FFFFFF" x:Key="TextColor"/>
        
        <!--WaterMark Color-->
        <SolidColorBrush Color="#676767" x:Key="WaterMarkColor"/>

        <!--BorderBrush Color-->
        <SolidColorBrush Color="#303030" x:Key="BorderBrushColor"/>

        <!--TextBoxStyle-->
        <Style TargetType="TextBox" x:Key="TextBoxStyle">
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="220"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushColor}"/>
            <Setter Property="CaretBrush" Value="{DynamicResource TextColor}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="7,0,0,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="txtBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                            <Grid Margin="{TemplateBinding Padding}">

                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="0,0,12,0"/>

                                <Label x:Name="WaterMark"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"
                                       Margin="3,0,0,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Text" Value=""/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        TargetName="WaterMark"
                                        Value="Visible"/>

                                <Setter Property="Foreground" Value="{DynamicResource WaterMarkColor}"/>

                                <Setter Property="CaretBrush" Value="{DynamicResource WaterMarkColor}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--CopyButton-->
        <Style TargetType="Button" x:Key="CopyButton">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                CornerRadius="4">

                            <Border.Background>
                                <SolidColorBrush Color="#2D2D2D" x:Name="BorderBackground"/>
                            </Border.Background>

                            <bi:BootstrapIcon x:Name="icon" 
                                              Icon="Subtract"
                                              Width="16"
                                              Foreground="White"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                        </Border>
                        <ControlTemplate.Triggers>

                            <EventTrigger RoutedEvent="Border.MouseEnter"
                                      SourceName="border">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#2D2D2D"
                                                    To="#323232"
                                                    Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <EventTrigger RoutedEvent="Border.MouseLeave"
                                      SourceName="border">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#323232"
                                                    To="#2D2D2D"
                                                    Duration="0:0:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Foreground" TargetName="icon" Value="#B5ADEB"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <SolidColorBrush Color="#FFFFFF" x:Key="BtnForeground"/>
        <SolidColorBrush Color="#202020" x:Key="BtnBackground"/>

        <!--CloseButton-->
        <Style TargetType="Button" x:Key="CloseButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BorderBackground" Background="{DynamicResource BtnBackground}"
                            Width="46"
                            Height="32"
                            CornerRadius="0,8,0,0">

                            <bi:BootstrapIcon Icon="XLg"
                                          x:Name="icon"
                                          Width="15"
                                          Foreground="{DynamicResource BtnForeground}"/>

                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="BorderBackground" Value="#C42B1C"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--MinimizeButton-->
        <Style TargetType="Button" x:Key="MinimizeButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BorderBackground" Background="{DynamicResource BtnBackground}"
                                Width="46"
                                Height="32">

                            <Border Background="{DynamicResource BtnForeground}"
                                Width="14"
                                Height="1"
                                CornerRadius="0"/>

                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="BorderBackground" Value="#2A2A2A"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>
    
    <Border CornerRadius="8"
            Background="#202020"
            BorderThickness="1"
            BorderBrush="#323232"
            MouseLeftButtonDown="Border_MouseLeftButtonDown">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!--TitleBar-->
            <Border>
                <Grid>
                    <StackPanel Orientation="Horizontal"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Right">
                        <Button Style="{DynamicResource MinimizeButton}"
                                Command="{Binding MinimizeCommand}"
                                CommandParameter="{Binding ElementName=Dialog}"/>

                        <Button Style="{DynamicResource CloseButton}"
                                Command="{Binding CloseCommand}"
                                CommandParameter="{Binding ElementName=Dialog}"/>
                    </StackPanel>
                </Grid>
            </Border>

            <StackPanel Grid.Row="1">

                <!--Login-->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            Margin="0,5,0,10">
                    
                    <TextBox Width="220"
                             Text="{Binding Login}"
                             Style="{DynamicResource TextBoxStyle}"
                             Tag="Login"/>
                    
                    <Button Style="{DynamicResource CopyButton}"
                            Command="{Binding CopyCommand}"
                            Height="40"
                            CommandParameter="{Binding Login}"/>
                </StackPanel>

                <!--Password-->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    
                    <TextBox Width="220"
                             Text="{Binding StarPassword}"
                             Style="{DynamicResource TextBoxStyle}"
                             Tag="Password"/>
                    
                    <Button Style="{DynamicResource CopyButton}"
                            Command="{Binding CopyCommand}"
                            Height="40"
                            CommandParameter="{Binding Password}"/>
                </StackPanel>

                <TextBox Width="265" 
                         VerticalContentAlignment="Top"
                         Text="{Binding Notes}"
                         Margin="17,10,0,0"
                         Height="90"
                         Padding="7,2,0,0"
                         TextWrapping="Wrap"
                         Tag="Notes"
                         Style="{DynamicResource TextBoxStyle}"/>
            </StackPanel>
        </Grid>
    </Border>
</Window>
